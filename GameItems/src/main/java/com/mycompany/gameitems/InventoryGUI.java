/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.gameitems;

import javax.swing.*;
import java.util.ArrayList;

/**
 *
 * @author Cameron
 */
public class InventoryGUI extends javax.swing.JFrame {

    private ArrayList<GameItem> playerInventory = new ArrayList<>();
    private ArrayList<GameItem> roomItems = new ArrayList<>();
    private DefaultListModel<String> playerListModel = new DefaultListModel<>();
    private DefaultListModel<String> roomListModel = new DefaultListModel<>();
    private JList<String> playerList;
    private JList<String> roomList;
    private JButton examineButton;
    private JButton takeButton;
    private JButton dropButton;

    public InventoryGUI() {
    initComponents();
    jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
    public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
        if (!evt.getValueIsAdjusting() && jList1.getSelectedIndex() != -1) {
            jList2.clearSelection(); // Removes the selection of another item in the opposite list
            }
        }
    });

    jList2.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
        public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
            if (!evt.getValueIsAdjusting() && jList2.getSelectedIndex() != -1) {
                jList1.clearSelection(); // Removes the selection of another item in the opposite list
            }
        }
    });
    populateItems();
    }
    
    private void populateItems() {
    playerInventory.add(new GameItem("Sword", "A sharp blade!"));
    playerInventory.add(new GameItem("Shield", "Provides protection!"));
    roomItems.add(new GameItem("Potion", "Heals wounds!"));
    roomItems.add(new GameItem("Key", "Opens a locked door!"));
    roomItems.add(new GameItem("Rice", "Restores Hunger!"));

    for (GameItem item : playerInventory) {
        playerListModel.addElement(item.getName());
    }
    for (GameItem item : roomItems) {
        roomListModel.addElement(item.getName());
    }

    jList1.setModel(playerListModel);  // Set model directly here
    jList2.setModel(roomListModel);    // Set model directly here
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ListOfPlayerItems = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        ListOfRoomItems = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        PlayerItemsLabel = new javax.swing.JLabel();
        RoomItemsLabel = new javax.swing.JLabel();
        TakeButton = new javax.swing.JButton();
        DropButton = new javax.swing.JButton();
        ExamineButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        ListOfPlayerItems.setViewportView(jList1);

        jList2.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        ListOfRoomItems.setViewportView(jList2);

        PlayerItemsLabel.setText("Player Items");

        RoomItemsLabel.setText("Room Items");

        TakeButton.setText("Take");
        TakeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TakeButtonActionPerformed(evt);
            }
        });

        DropButton.setText("Drop");
        DropButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DropButtonActionPerformed(evt);
            }
        });

        ExamineButton.setText("Examine");
        ExamineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExamineButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(ListOfPlayerItems, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ListOfRoomItems, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(PlayerItemsLabel)
                    .addComponent(TakeButton))
                .addGap(18, 18, 18)
                .addComponent(ExamineButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RoomItemsLabel)
                    .addComponent(DropButton))
                .addGap(77, 77, 77))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ListOfRoomItems, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ListOfPlayerItems, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PlayerItemsLabel)
                    .addComponent(RoomItemsLabel))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TakeButton)
                    .addComponent(DropButton)
                    .addComponent(ExamineButton))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TakeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TakeButtonActionPerformed
        int selectedIndex = jList2.getSelectedIndex();
        if (selectedIndex != -1) {
            String selectedItemName = jList2.getSelectedValue();
            
            // Adds to player's list and removes from the room list
            playerListModel.addElement(selectedItemName);
            roomListModel.remove(selectedIndex);

            // Updates the ArrayLists
            GameItem itemToMove = roomItems.remove(selectedIndex);
            playerInventory.add(itemToMove);
        }
    }//GEN-LAST:event_TakeButtonActionPerformed

    private void ExamineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExamineButtonActionPerformed
        int selectedPlayerIndex = jList1.getSelectedIndex();
        if (selectedPlayerIndex != -1) {
            String selectedItemDescription = playerInventory.get(selectedPlayerIndex).getDescription();
            JOptionPane.showMessageDialog(this, selectedItemDescription);
        }
    }//GEN-LAST:event_ExamineButtonActionPerformed

    private void DropButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DropButtonActionPerformed
        int selectedIndex = jList1.getSelectedIndex();
        if (selectedIndex != -1) {
            GameItem itemToDrop = playerInventory.get(selectedIndex);

            // Adds to room list and removes from the player's list
            roomListModel.addElement(itemToDrop.getName());
            playerListModel.remove(selectedIndex);

            // Updates the ArrayLists
            playerInventory.remove(selectedIndex);
            roomItems.add(itemToDrop);
        }
    }//GEN-LAST:event_DropButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InventoryGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InventoryGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InventoryGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InventoryGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InventoryGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DropButton;
    private javax.swing.JButton ExamineButton;
    private javax.swing.JScrollPane ListOfPlayerItems;
    private javax.swing.JScrollPane ListOfRoomItems;
    private javax.swing.JLabel PlayerItemsLabel;
    private javax.swing.JLabel RoomItemsLabel;
    private javax.swing.JButton TakeButton;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    // End of variables declaration//GEN-END:variables
}
